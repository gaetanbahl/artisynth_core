%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (liveUpdateIcon.eps)
%%CreationDate: (Wed Jan 26 20:04:48 2011)
%%BoundingBox: 109 217 134 242
%%HiResBoundingBox: 109 217 134.006 242
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 109 217 134 242
userdict begin
DisplayImage
109 217
25.0057 25.0057
12.000000
25 25
0
0
7A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A99
7A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A99
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFEEEEEEEEEEEEEEEEEEEEEEEE7A8A997A8A99EEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAEAEADEDEDEDEDEDEDEDEDEE5E5E5
EEEEEEEEEEEEEEEEEEEEEEEEA3A3A3C2C2C2EEEEEEEEEEEEEEEEEE7A8A997A8A99EEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEFFFFFFAAAAAA8B8B8B6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E8B8B8B
9C9C9CFFFFFFF9F9F96E6E6E6F6F6FFFFFFFEEEEEEEEEEEE7A8A997A8A99EEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEDEDEDE8B8B8B6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E
6E6E6E6E6E6E6F6F6F6F6F6FB5B5B5EEEEEEEEEEEE7A8A997A8A99EEEEEEEEEEEEEEEEEEEEEEEE
DEDEDE6E6E6E6E6E6E6E6E6E8B8B8BABABABEEEEEEF8F8F8F1F1F1ABABAB8B8B8B6E6E6E6E6E6E
6E6E6E6F6F6F6F6F6F6F6F6FFAFAFAEEEEEE7A8A997A8A99EEEEEEEEEEEEEEEEEEDEDEDE6E6E6E
6E6E6E6E6E6ECACACAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDE6E6E6E6F6F6F
6F6F6F6F6F6F6F6F6F969696EEEEEE7A8A997A8A99EEEEEEEEEEEEEEEEEE8B8B8B6E6E6E6E6E6E
E2E2E2EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEECACACA6F6F6F6E6E6E6F6F6F
6F6F6F6F6F6F6F6F6FE7E7E77A8A997A8A99EEEEEEEEEEEEABABAB6E6E6E6E6E6EDEDEDEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEF3F3F36F6F6F6F6F6F6F6F6F6F6F6F6F6F6F
6F6F6F6F6F6F6F6F6F7A8A997A8A99EEEEEEEEEEEEABABAB6E6E6E8B8B8BFFFFFFEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFB9B9B9BABABABABABABABABAC6C6C6C6C6C6
C6C6C6C7C7C77A8A997A8A99EEEEEEEEEEEE8B8B8B6E6E6EABABABEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEE7A8A997A8A99EEEEEEEEEEEE6E6E6E6E6E6EDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
7A8A997A8A99EEEEEEEEEEEE6E6E6E6E6E6EDFDFDFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE7A8A99
7A8A99EEEEEEEEEEEE6E6E6E6E6E6EDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE7A8A997A8A99
EEEEEEEEEEEE8B8B8B6E6E6EABABABEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE8B8B8B6E6E6E8B8B8BEEEEEEEEEEEE7A8A997A8A99EEEEEE
EEEEEEABABAB6E6E6E8B8B8BFCFCFCEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEF5F5F56E6E6E6E6E6E8B8B8BEEEEEEEEEEEE7A8A997A8A99EEEEEEEEEEEE
C6C6C66E6E6E6E6E6EDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEDEDEDE6E6E6E6E6E6EB9B9B9EEEEEEEEEEEE7A8A997A8A99EEEEEEEEEEEEEEEEEE
ABABAB6E6E6E6E6E6EEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EDEDED6E6E6E6E6E6E8B8B8BEEEEEEEEEEEEEEEEEE7A8A997A8A99EEEEEEEEEEEEEEEEEEDEDEDE
6E6E6E6E6E6E6E6E6EDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDE6E6E6E
6E6E6E6E6E6ED7D7D7EEEEEEEEEEEEEEEEEE7A8A997A8A99EEEEEEEEEEEEEEEEEEEEEEEED1D1D1
6E6E6E6E6E6E6E6E6E8B8B8BABABABEDEDEDF5F5F5F5F5F5ABABAB8B8B8B6E6E6E6E6E6E6E6E6E
D7D7D7EEEEEEEEEEEEEEEEEEEEEEEE7A8A997A8A99EEEEEEEEEEEEEEEEEEEEEEEEEEEEEED1D1D1
6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6ED7D7D7EEEEEE
EEEEEEEEEEEEEEEEEEEEEEEE7A8A997A8A99EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFCFCFC
DEDEDE8B8B8B6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E8B8B8BDEDEDEFCFCFCEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEE7A8A997A8A99EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEDEDEDDEDEDEDEDEDEDEDEDEEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEE7A8A997A8A99EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEE7A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A99
7A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A997A8A99
7A8A99

end
%%PageTrailer
%%Trailer
%%EOF
