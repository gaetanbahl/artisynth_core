Notes on compiling solver libraries on Windows using Cygwin
-----------------------------------------------------------
Oct 20, 2010

Windows compilation is done using Cygwin. You should be able to simply
run 'make', and the Makefile will detect the Cygwin install and set
the build parameters appropriately.

However, note the following:

1) The Cygwin compilation requires that the usual Cygwin libraries
*not* be used, since we want to create a .dll that does not depend on
them.  This can be accomplished by compiling under mingw, or by
specifying -mno-cygwin to gcc in Cygwin.

2) The gcc that comes with the latest version of Cygwin does not
support -mno-cygwin, so one must also install gcc version 3, which
then becomes available as the commands gcc-3 and g++-3.

3) On Windows, the call to random() in pardisoTest and pardiso4Test
must be replaced by a call to rand() (which is done using an #ifdef CYGWIN).

4) For Pardiso 4, pardiso400_INTEL_IA32.lib was created with Visual
Studio and cannot be linked with gcc:
http://stackoverflow.com/questions/1138170/use-libraries-compiled-with-visual-studio-in-an-application-compiled-by-g-ming,
therefore we have to build our own import library:
http://www.emmestech.com/moron_guides/moron1.html

pexports can be downloaded from here:
http://www.emmestech.com/software/pexports-0.43/download_pexports.html

create import library:
$ cd $ARTISYNTH_HOME/lib/Windows
$ pexports.exe pardiso400_INTEL_IA32.dll > pardiso400_INTEL_IA32.def
$ dlltool --input-def pardiso400_INTEL_IA32.def  --dllname pardiso400_INTEL_IA32.dll --output-lib pardiso400_INTEL_IA32.a -k
$ rablib pardiso400_INTEL_IA32.a

5) Since it was compiled using an Intel compiler, Pardiso 4 exports
its entry points as PARDISO and PARDISOINIT, vs.  pardiso_ and
pardisoinit_ for the earlier version of Pardiso.

6) When compiling, you need to define JAVA_HOME in the Cygwin section
of the Makefile.

Overall compilation and testing is done from a Cygwin shell as

$ cd $ARTISYNTH_HOME/src/maspack/solvers/lib
$ make pardiso4Test
$ ./pardiso4Test
$ make libs

Thanks to Ian Stavness for much of the above, especially the business
of creating an import library.
